// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jonathan-buttner/game-framework/internal/phase/draft (interfaces: Deck)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	deck "github.com/jonathan-buttner/game-framework/internal/deck"
)

// MockDeck is a mock of Deck interface.
type MockDeck struct {
	ctrl     *gomock.Controller
	recorder *MockDeckMockRecorder
}

// MockDeckMockRecorder is the mock recorder for MockDeck.
type MockDeckMockRecorder struct {
	mock *MockDeck
}

// NewMockDeck creates a new mock instance.
func NewMockDeck(ctrl *gomock.Controller) *MockDeck {
	mock := &MockDeck{ctrl: ctrl}
	mock.recorder = &MockDeckMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeck) EXPECT() *MockDeckMockRecorder {
	return m.recorder
}

// DealCards mocks base method.
func (m *MockDeck) DealCards(arg0 int, arg1 deck.Player) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DealCards", arg0, arg1)
}

// DealCards indicates an expected call of DealCards.
func (mr *MockDeckMockRecorder) DealCards(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DealCards", reflect.TypeOf((*MockDeck)(nil).DealCards), arg0, arg1)
}

// Shuffle mocks base method.
func (m *MockDeck) Shuffle() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Shuffle")
}

// Shuffle indicates an expected call of Shuffle.
func (mr *MockDeckMockRecorder) Shuffle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shuffle", reflect.TypeOf((*MockDeck)(nil).Shuffle))
}
